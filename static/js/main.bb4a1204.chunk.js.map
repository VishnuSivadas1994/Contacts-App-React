{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.components.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","person","id","name","email","CardList","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchfield","target","value","state","fetch","then","response","json","users","this","filteredPerson","filter","personn","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAIaA,G,YAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAAMI,OAAOC,GAAvC,4BACrB,6BAAKL,EAAMI,OAAOE,OAClB,4BAAIN,EAAMI,OAAOG,aCJZC,G,MAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACKD,EAAMI,OAAOK,KAAI,SAAAL,GAAM,OACpB,cAAC,EAAD,CAAsBA,OAAQA,GAAnBA,EAAOC,WCHjBK,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAcC,EAAjB,EAAiBA,aAAjB,OACrB,uBACIX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC2CHG,E,kDA9Cb,aAAc,IAAD,8BACX,gBAkBJH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAjBpC,EAAKC,MAAQ,CACXjB,OAAQ,GACRc,YAAa,IALJ,E,gEAaO,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACb,OAAOsB,S,+BAO9B,IAAD,EAE0BC,KAAKN,MAA7BjB,EAFF,EAEEA,OAAQc,EAFV,EAEUA,YACVU,EAAiBxB,EAAOyB,QAAO,SAAAC,GAAO,OAC1CA,EAAQxB,KAAKyB,cAAcC,SAASd,EAAYa,kBAIlD,OACE,sBAAK9B,UAAU,MAAf,UACA,0CACE,cAAC,EAAD,CACEU,YAAY,kBACZC,aAAee,KAAKf,eAGtB,cAAC,EAAD,CAAUR,OAAQwB,W,GAxCRK,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bb4a1204.chunk.js","sourcesContent":["import React from 'react';\n\nimport './card.styles.css';\n\nexport const Card = (props) => (\n    <div className='card-container'>\n        <img alt=\"person\" src={`https://robohash.org/${props.person.id}?set=set2&size=180x180`}/>\n        <h2>{props.person.name}</h2>\n        <p>{props.person.email}</p>\n        \n    </div>\n);","import React from 'react';\nimport {Card} from '../card/card.component';\nimport './card-list.styles.css';\n\nexport const CardList = props => (\n    <div className='card-list'>\n        {props.person.map(person => (\n            <Card key={person.id} person={person} />\n        ))}\n    </div>\n);","import React from 'react';\nimport './search-box.styles.css';\n\n\nexport const SearchBox = ({ placeholder , handleChange}) => (\n    <input\n        className='search'\n        type='search'\n        placeholder={placeholder}\n        onChange={handleChange}\n    />\n)","import React, {Component} from 'react';\nimport './App.css';\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.components';\n\nclass App extends Component{\n  constructor(){\n    super();\n  \n    this.state = {\n      person: [],\n      searchfield: ''\n    };\n\n    //this.handleChange = this.handleChange.bind(this);\n\n\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({person:users}));\n  }\n\nhandleChange = (e) => {\n  this.setState({ searchfield: e.target.value })\n}\n\n  render(){\n\n    const { person, searchfield } = this.state;\n    const filteredPerson = person.filter(personn =>\n      personn.name.toLowerCase().includes(searchfield.toLowerCase())\n      );\n\n\n    return (\n      <div className=\"App\">\n      <h1>CONTACTS</h1>\n        <SearchBox\n          placeholder='Search a Person'\n          handleChange={ this.handleChange }\n\n        />\n        <CardList person={filteredPerson} />\n     </div>\n    );\n\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}